// Generated by view binder compiler. Do not edit!
package ru.netology.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.Barrier;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Group;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ru.netology.R;

public final class FragmentNewPostBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView addIv;

  @NonNull
  public final TextView authorTv;

  @NonNull
  public final ImageView avatarV;

  @NonNull
  public final LinearLayout buttonPanel;

  @NonNull
  public final ImageView cancelIv;

  @NonNull
  public final ImageView cancelPhotoIm;

  @NonNull
  public final EditText contentEt;

  @NonNull
  public final Group photoContainer;

  @NonNull
  public final ImageView photoIv;

  @NonNull
  public final MaterialButton pickPhoto;

  @NonNull
  public final Barrier publishedBarrier;

  @NonNull
  public final ImageView saveIv;

  @NonNull
  public final MaterialButton takePhoto;

  private FragmentNewPostBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView addIv,
      @NonNull TextView authorTv, @NonNull ImageView avatarV, @NonNull LinearLayout buttonPanel,
      @NonNull ImageView cancelIv, @NonNull ImageView cancelPhotoIm, @NonNull EditText contentEt,
      @NonNull Group photoContainer, @NonNull ImageView photoIv, @NonNull MaterialButton pickPhoto,
      @NonNull Barrier publishedBarrier, @NonNull ImageView saveIv,
      @NonNull MaterialButton takePhoto) {
    this.rootView = rootView;
    this.addIv = addIv;
    this.authorTv = authorTv;
    this.avatarV = avatarV;
    this.buttonPanel = buttonPanel;
    this.cancelIv = cancelIv;
    this.cancelPhotoIm = cancelPhotoIm;
    this.contentEt = contentEt;
    this.photoContainer = photoContainer;
    this.photoIv = photoIv;
    this.pickPhoto = pickPhoto;
    this.publishedBarrier = publishedBarrier;
    this.saveIv = saveIv;
    this.takePhoto = takePhoto;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentNewPostBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentNewPostBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_new_post, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentNewPostBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addIv;
      ImageView addIv = rootView.findViewById(id);
      if (addIv == null) {
        break missingId;
      }

      id = R.id.authorTv;
      TextView authorTv = rootView.findViewById(id);
      if (authorTv == null) {
        break missingId;
      }

      id = R.id.avatarV;
      ImageView avatarV = rootView.findViewById(id);
      if (avatarV == null) {
        break missingId;
      }

      id = R.id.buttonPanel;
      LinearLayout buttonPanel = rootView.findViewById(id);
      if (buttonPanel == null) {
        break missingId;
      }

      id = R.id.cancelIv;
      ImageView cancelIv = rootView.findViewById(id);
      if (cancelIv == null) {
        break missingId;
      }

      id = R.id.cancelPhotoIm;
      ImageView cancelPhotoIm = rootView.findViewById(id);
      if (cancelPhotoIm == null) {
        break missingId;
      }

      id = R.id.contentEt;
      EditText contentEt = rootView.findViewById(id);
      if (contentEt == null) {
        break missingId;
      }

      id = R.id.photoContainer;
      Group photoContainer = rootView.findViewById(id);
      if (photoContainer == null) {
        break missingId;
      }

      id = R.id.photoIv;
      ImageView photoIv = rootView.findViewById(id);
      if (photoIv == null) {
        break missingId;
      }

      id = R.id.pickPhoto;
      MaterialButton pickPhoto = rootView.findViewById(id);
      if (pickPhoto == null) {
        break missingId;
      }

      id = R.id.publishedBarrier;
      Barrier publishedBarrier = rootView.findViewById(id);
      if (publishedBarrier == null) {
        break missingId;
      }

      id = R.id.saveIv;
      ImageView saveIv = rootView.findViewById(id);
      if (saveIv == null) {
        break missingId;
      }

      id = R.id.takePhoto;
      MaterialButton takePhoto = rootView.findViewById(id);
      if (takePhoto == null) {
        break missingId;
      }

      return new FragmentNewPostBinding((ConstraintLayout) rootView, addIv, authorTv, avatarV,
          buttonPanel, cancelIv, cancelPhotoIm, contentEt, photoContainer, photoIv, pickPhoto,
          publishedBarrier, saveIv, takePhoto);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
