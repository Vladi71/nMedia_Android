// Generated by view binder compiler. Do not edit!
package ru.netology.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Group;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.chip.Chip;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ru.netology.R;

public final class FragmentFeedBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final FloatingActionButton addPostView;

  @NonNull
  public final TextView emptyText;

  @NonNull
  public final Group errorGroup;

  @NonNull
  public final RecyclerView listPost;

  @NonNull
  public final Chip newPostsChip;

  @NonNull
  public final ProgressBar progress;

  @NonNull
  public final Button retryButton;

  @NonNull
  public final TextView retryTitle;

  @NonNull
  public final SwipeRefreshLayout swipeRefresh;

  private FragmentFeedBinding(@NonNull ConstraintLayout rootView,
      @NonNull FloatingActionButton addPostView, @NonNull TextView emptyText,
      @NonNull Group errorGroup, @NonNull RecyclerView listPost, @NonNull Chip newPostsChip,
      @NonNull ProgressBar progress, @NonNull Button retryButton, @NonNull TextView retryTitle,
      @NonNull SwipeRefreshLayout swipeRefresh) {
    this.rootView = rootView;
    this.addPostView = addPostView;
    this.emptyText = emptyText;
    this.errorGroup = errorGroup;
    this.listPost = listPost;
    this.newPostsChip = newPostsChip;
    this.progress = progress;
    this.retryButton = retryButton;
    this.retryTitle = retryTitle;
    this.swipeRefresh = swipeRefresh;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentFeedBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentFeedBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_feed, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentFeedBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addPostView;
      FloatingActionButton addPostView = ViewBindings.findChildViewById(rootView, id);
      if (addPostView == null) {
        break missingId;
      }

      id = R.id.emptyText;
      TextView emptyText = ViewBindings.findChildViewById(rootView, id);
      if (emptyText == null) {
        break missingId;
      }

      id = R.id.errorGroup;
      Group errorGroup = ViewBindings.findChildViewById(rootView, id);
      if (errorGroup == null) {
        break missingId;
      }

      id = R.id.listPost;
      RecyclerView listPost = ViewBindings.findChildViewById(rootView, id);
      if (listPost == null) {
        break missingId;
      }

      id = R.id.newPostsChip;
      Chip newPostsChip = ViewBindings.findChildViewById(rootView, id);
      if (newPostsChip == null) {
        break missingId;
      }

      id = R.id.progress;
      ProgressBar progress = ViewBindings.findChildViewById(rootView, id);
      if (progress == null) {
        break missingId;
      }

      id = R.id.retryButton;
      Button retryButton = ViewBindings.findChildViewById(rootView, id);
      if (retryButton == null) {
        break missingId;
      }

      id = R.id.retryTitle;
      TextView retryTitle = ViewBindings.findChildViewById(rootView, id);
      if (retryTitle == null) {
        break missingId;
      }

      id = R.id.swipeRefresh;
      SwipeRefreshLayout swipeRefresh = ViewBindings.findChildViewById(rootView, id);
      if (swipeRefresh == null) {
        break missingId;
      }

      return new FragmentFeedBinding((ConstraintLayout) rootView, addPostView, emptyText,
          errorGroup, listPost, newPostsChip, progress, retryButton, retryTitle, swipeRefresh);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
